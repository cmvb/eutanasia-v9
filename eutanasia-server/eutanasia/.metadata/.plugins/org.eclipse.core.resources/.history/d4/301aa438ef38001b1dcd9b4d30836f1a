package com.eutanasia.eutanasia.dao.impl;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;

import org.springframework.stereotype.Repository;

import com.eutanasia.eutanasia.dao.AbstractDao;
import com.eutanasia.eutanasia.dao.IPostsDao;
import com.eutanasia.eutanasia.model.MeGustaTB;
import com.eutanasia.eutanasia.model.PostTB;
import com.eutanasia.eutanasia.util.ConstantesValidaciones;

@Repository
public class MeGustaDaoImpl extends AbstractDao<MeGustaTB> implements IPostsDao {

	@PersistenceContext(unitName = "default")
	private EntityManager em;

	@Override
	List<PostTB> consultarPostsPopulares(PostTB filtroPost);

	// PARAMETROS
	Map<String, Object> pamameters = new HashMap<>();

	// QUERY
	StringBuilder JPQL = new StringBuilder("SELECT t FROM MeGustaTB t WHERE 1 = 1 ");
	// Q. Order By
	JPQL.append(" ORDER BY t.id");
	// END QUERY

	TypedQuery<MeGustaTB> query = em.createQuery(JPQL.toString(),
			PostTB.class);pamameters.forEach((k,v)->query.setParameter(k,v));

	return query.getResultList();
	}

	@Override
	public MeGustaTB crearMeGusta(MeGustaTB meGusta) {
		meGusta = colocarValoresDefecto(meGusta, ConstantesValidaciones.PHASE_CREATE);
		super.create(meGusta);
		return meGusta;
	}

	@Override
	public MeGustaTB modificarMeGusta(MeGustaTB meGusta) {
		meGusta = colocarValoresDefecto(meGusta, ConstantesValidaciones.PHASE_UPDATE);
		super.update(meGusta);
		return meGusta;
	}

	@Override
	public void eliminarPost(long idMeGusta) {
		super.deleteById(idMeGusta);
	}

	private PostTB colocarValoresDefecto(MeGustaTB meGusta, String fase) {
		if (ConstantesValidaciones.PHASE_CREATE.equalsIgnoreCase(fase)) {
			meGusta.setFechaCreacion(new Date());
			meGusta.setUsuarioCreacion("SYSTEM");
		}
		meGusta.setFechaActualizacion(new Date());
		meGusta.setUsuarioActualizacion("SYSTEM");
		return meGusta;
	}

}
